// THIS IS AN AUTO-GENERATED FILE, DONT MODIFY IT!
// Author: bbbirder
// Defined Assembly: {{modulename}}
using System;
using System.Collections.Generic;
using System.Reflection;
using com.bbbirder;
{{ (target_namespace | string.empty) ? "" : "namespace "+target_namespace+"{" }}
	public partial class {{target_name}}:IWatched{
        public Action<object, string> onSetProperty { get; set; }
        public Action<object, string> onGetProperty { get; set; }

		{{~ if write_back ~}}
		public {{src_name}} __rawObject { get; private set; }
		{{~ else ~}}
		//public Dictionary<string,object> __innerData = new();
		{{~ end ~}}



		{{~ for m in members ~}}
		{{

		}}
		{{~ if m.is_static ~}}




		{{~ else ~}} // instance member
		
		{{~ if m.is_list ~}}
		{{m.type = "ReactiveList<"+m.element_type+">"}}
		{{m.type}} __inner_{{m.name}};
		{{~ else if m.is_watched ~}}
		{{m.type}} __inner_{{m.name}};
		{{~ end ~}}

		#if ODIN_INSPECTOR
		[Sirenix.OdinInspector.ShowInInspector]
		#endif
		{{m.comment}}
		public {{m.type}} @{{m.name}}{
			get {
				{{~ if m.is_list ~}}
					__inner_{{m.name}}??=new(__rawObject?.{{m.name}});
					onGetProperty?.Invoke(this,"{{m.name}}");
					return __inner_{{m.name}};
				{{~ else ~}}
					{{~ if m.is_watched ~}}
					__inner_{{m.name}} ??= __rawObject.{{m.name}};
					onGetProperty?.Invoke(this,"{{m.name}}");
					return __inner_{{m.name}};
					{{~ else ~}}
					onGetProperty?.Invoke(this,"{{m.name}}");
					return __rawObject.{{m.name}};
					{{~ end ~}}
				{{~ end ~}}
			}
			{{~ if m.can_write ~}}
			set {
				{{~ if m.is_list ~}}
					if(__rawObject !=null && __rawObject.{{m.name}}.Equals(value)) return;
					var prev = __inner_{{m.name}};
					__inner_{{m.name}}=new(value);
					onSetProperty?.Invoke(this,"{{m.name}}");
				{{~ else ~}}
					{{~ if m.is_watched ~}}
					__inner_{{m.name}} = value;
					__rawObject.{{m.name}} = value.__rawObject;
					onSetProperty?.Invoke(this,"{{m.name}}");
					{{~ else ~}}
					if(__rawObject.{{m.name}}==value) return;
					__rawObject.{{m.name}} = value;
					onSetProperty?.Invoke(this,"{{m.name}}");
					{{~ end ~}}
				{{~ end ~}}
			}
			{{~ end ~}}
		}


		{{~ end ~}}//end static check
		{{~ end ~}}//end member

		public void __InitWithRawData(object raw){
			__rawObject = ({{src_name}})raw;
		}
		{{~ if write_back ~}}
		//public {{target_name}}(object raw){
		//	__rawObject = ({{src_name}})raw;
		//}
		public static implicit operator {{target_name}}({{src_name}} raw){
			var ret = new {{target_name}}();//(raw);
			ret.__InitWithRawData(raw);
			CSReactive.DataMaker.OnMakeData(ret);
			return ret;
		}
		{{~ else ~}}
		public {{target_name}}(){
			{{~ if write_back ~}}
			__rawObject = System.Activator.CreateInstance(typeof({{src_name}}));
			{{~ end ~}}
		}
		{{~ end ~}}
		
		public object this[string key]{
			get {
				{{~ for m in members ~}}
				{{~ if !is_static ~}}
				{{
				src_fld  = write_back ? ((is_static ? target_name :"__rawObject")+"."+m.name) : ("__inner_"+m.name)
				}}
				if(key.Equals("{{m.name}}")){
					onGetProperty?.Invoke(this,"{{m.name}}");
					return (object){{src_fld}};
				}
				{{~ end ~}}
				{{~ end ~}}
				return null;
			}
			set {
				{{~ for m in members ~}}
				{{~ if !is_static ~}}
				{{
				src_fld  = write_back ? ((is_static ? target_name :"__rawObject")+"."+m.name) : ("__inner_"+m.name)
				}}
				if(key.Equals("{{m.name}}")){
					{{~ if !m.can_write ~}}
					throw new Exception($"cannot set member {key}, it is readonly");
					{{~else~}}
					if(!(value is {{m.raw_type}} __v) || {{src_fld}}==__v) return;
					//var prev = {{src_fld}};
					{{src_fld}} = __v;
					onSetProperty?.Invoke(this,"{{m.name}}");
					return;
					{{~ end ~}}
				}
				{{~ end ~}}
				{{~ end ~}}
				throw new Exception($"cannot set member {key}, no such member in type {{src_name}}");
			}
		}
		
	}

{{ (target_namespace | string.empty) ? "" : "}" }}


namespace com.bbbirder{
	public static partial class DataExtension{
		public static {{target_ns_part+target_name}} Reactive(this CSReactive.__Internal_Maker __maker,{{src_name}} __data){
			var __watched_obj = new {{target_ns_part+target_name}}();
			__watched_obj.__InitWithRawData(__data);
			__maker.OnMakeData(__watched_obj);
			return __watched_obj;
		}
	}

}
